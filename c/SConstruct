# This SConstruct launches all Sconscript files inside the library directories 
# The Environment() is created in the SConstruct script
# This dir can be built standalone by executing scons here, or together
# by executing scons in the parent directory
import sys
import os

#Compiler configure
debug = int(ARGUMENTS.get('debug', '0'))
compiler = ARGUMENTS.get('compiler', 'gcc')

#Paths
system_include = '/usr/include'
system_libpath = '/usr/lib'

#commons_path =     '#/common-libs'
#bioinfo_path =     '#/bioinfo-libs'
c_src_path =        '#/src'
aligners_path =     '#/src/aligners'
bioformats_path =   '#/src/bioformats'
commons_path =      '#/src/commons'
containers_path =   '#/src/containers'
math_path =         '#/src/math'
third_party_path =  '#/../third_party'

VariantDir('build', 'src', duplicate=0)

build_tools = ['default']
if compiler == 'icc':
    build_tools += ['intelc']


#Build environment
env = Environment(TOOLS = build_tools,
		  CFLAGS = ' -Wall -std=c99 -D_XOPEN_SOURCE=700 -D_BSD_SOURCE -D_GNU_SOURCE -D_REENTRANT ',
		  CPPPATH = ['.', '#', system_include, '%s/libxml2' % system_include, '%s' % c_src_path, '%s' % aligners_path
		  , '%s' % bioformats_path, '%s' % commons_path, '%s' % containers_path, '%s' % math_path, '%s' % third_party_path], 
		  LIBPATH = [system_libpath],
		  LINKFLAGS = [],
		  LIBS = ['xml2', 'm', 'z', 'curl'])

if os.environ.has_key('CPATH'):
    for dir in os.getenv('CPATH').split(':'):
        env.Append(CPPPATH=[dir])

if os.environ.has_key('LIBRARY_PATH'):
    for dir in os.getenv('LIBRARY_PATH').split(':'):
        env.Append(LIBPATH=[dir])

if compiler == 'icc':
	env['CFLAGS'] += ' -msse4.2 -openmp '
	env['LIBS'] += ['irc']
	env['LINKFLAGS'] += ['-openmp']
else:
	env['CFLAGS'] += ' -fopenmp '
	env['LINKFLAGS'] += ['-fopenmp']

env['objects'] = []
env.Decider('MD5-timestamp')


# Third party
third_party_env = Environment(TOOLS = env['TOOLS'])
SConscript('../third_party/SConscript', exports = ['third_party_env', 'debug', 'compiler'])

env['CPPPATH'] += third_party_env['CPPPATH']


# our src

SConscript('src/aligners/SConscript', exports = ['env', 'debug', 'compiler'])
SConscript('src/bioformats/SConscript', exports = ['env', 'debug', 'compiler'])
SConscript('src/commons/SConscript', exports = ['env', 'debug', 'compiler'])
SConscript('src/containers/SConscript', exports = ['env', 'debug', 'compiler'])
SConscript('src/math/SConscript', exports = ['env', 'debug', 'compiler'])


env.Library('build/hpg', third_party_env['objects'] + env['objects'])
